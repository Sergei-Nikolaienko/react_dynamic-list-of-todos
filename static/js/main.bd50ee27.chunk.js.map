{"version":3,"sources":["api.ts","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SelectOption","TodoList","todos","selectTodo","activeTodo","className","map","todo","id","title","completed","isActive","classname","type","onClick","TodoFilter","query","handleSetFilter","handleSetQuery","onChange","event","target","value","Object","values","filter","option","i","toLowerCase","placeholder","trim","style","pointerEvents","Loader","TodoModal","useState","todoUser","setTodoUser","userId","useEffect","getUser","href","email","name","App","loadedTodos","setLoadedTodos","setActiveTodo","setFilter","setQuery","handleSelectTodo","visibleTodos","includes","all","active","arg","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd50ee27.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC } from 'react';\n\nenum SelectOption {\n  All,\n  Active,\n  Completed,\n}\n\ntype Props = {\n  query: string,\n  handleSetFilter: (query: string) => void,\n  handleSetQuery: (query: string) => void,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  query,\n  handleSetFilter,\n  handleSetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => handleSetFilter(\n            event.target.value,\n          )}\n        >\n          {Object.values(SelectOption)\n            .filter(value => typeof value === 'string')\n            .map((option, i) => (\n              <option\n                key={option}\n                value={SelectOption[i].toLowerCase()}\n              >\n                {option}\n              </option>\n            ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => handleSetQuery(\n          event.target.value.trim(),\n        )}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              handleSetQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import classname from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  activeTodo: Todo | null,\n  selectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  activeTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          // userId,\n          completed,\n        } = todo;\n\n        const isActive = activeTodo?.id === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n            className={classname({\n              'has-background-info-light': isActive,\n            })}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classname({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classname('far',\n                    {\n                      'fa-eye': !isActive,\n                      'fa-eye-slash': isActive,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  activeTodo: Todo,\n  selectTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ activeTodo, selectTodo }) => {\n  const [todoUser, setTodoUser] = useState<User | null>(null);\n  const {\n    id, title, completed, userId,\n  } = activeTodo;\n\n  useEffect(() => {\n    getUser(userId).then(setTodoUser);\n\n    return () => {\n      setTodoUser(null);\n    };\n  }, [activeTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\">\n        {!todoUser ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => selectTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n                {' by '}\n                <a href={`mailto:${todoUser.email}`}>\n                  {todoUser.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { Filters } from './types/Filters';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [loadedTodos, setLoadedTodos] = useState<Todo[]>([] as Todo[]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const handleSelectTodo = (todo: Todo | null) => setActiveTodo(todo);\n  const handleSetFilter = (arg: string) => setFilter(arg);\n  const handleSetQuery = (arg: string) => setQuery(arg);\n\n  useEffect(() => {\n    getTodos()\n      .then(setLoadedTodos);\n  }, []);\n\n  const visibleTodos = loadedTodos.filter(({\n    title,\n    completed,\n  }) => {\n    const isMatchingQuery = title.toLowerCase()\n      .includes(query.toLowerCase());\n\n    const filters: Filters = {\n      all: true,\n      completed,\n      active: !completed,\n    };\n\n    return isMatchingQuery && filters[filter];\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleSetFilter={handleSetFilter}\n                handleSetQuery={handleSetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!loadedTodos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  activeTodo={activeTodo}\n                  selectTodo={handleSelectTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          selectTodo={handleSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}